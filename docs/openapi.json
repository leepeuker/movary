{
  "openapi": "3.0.2",
  "info": {
    "title": "Movary",
    "version": ""
  },
  "servers": [],
  "paths": {
    "\/users\/{username}\/statistics\/dashboard": {
        "get": {
            "tags": [
                "Statistics"
            ],
            "summary": "Get all the data that's shown in the dashboard",
            "description": "Get all the statistics and the order of the rows in the dashboard. When a row is collapsed / hidden by default, the data for the hidden row isn't sent.",
            "parameters": [
                {
                    "name": "username",
                    "in": "path",
                    "description": "Name of user",
                    "required": true,
                    "schema": {
                      "type": "string"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "User is allowed to see the statistics of the requested user.",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "users": {
                                        "type": "object",
                                        "example": [
                                            {
                                                "name": "user1"
                                            },
                                            {
                                                "name": "user2"
                                            }
                                        ]
                                    },
                                    "totalPlayCount": {
                                        "$ref": "#/components/schemas/plays"
                                    },
                                    "uniqueMoviesCount" : {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "totalHoursWatched": {
                                        "type": "number",
                                        "example": 1
                                    },
                                    "averagePersonalRating": {
                                        "type": "number",
                                        "example": 1
                                    },
                                    "averagePlaysPerDay": {
                                        "type": "number",
                                        "example": 1
                                    },
                                    "averageRuntime": {
                                        "type": "number",
                                        "example": 1
                                    },
                                    "dashboardRows": {
                                        "type": "array",
                                        "description": "An array containing JSON objects of the dashboard rows. The order of the objects is the order of the rows.",
                                        "example": [
                                            {
                                                "row": "Last Plays",
                                                "id": 0,
                                                "isExtended": true,
                                                "isVisible": true
                                            },
                                            {
                                                "row": "Latest in Watchlist",
                                                "id": 9,
                                                "isExtended": true,
                                                "isVisible": true
                                            },
                                            {
                                                "row": "Most watched Actors",
                                                "id": 1,
                                                "isExtended": false,
                                                "isVisible": true
                                            },
                                            {
                                                "row": "Most watched Actresses",
                                                "id": 2,
                                                "isExtended": false,
                                                "isVisible": true
                                            },
                                            {
                                                "row": "Most watched Directors",
                                                "id": 3,
                                                "isExtended": false,
                                                "isVisible": true
                                            },
                                            {
                                                "row": "Most watched Genres",
                                                "id": 4,
                                                "isExtended": false,
                                                "isVisible": true
                                            },
                                            {
                                                "row": "Most watched Languages",
                                                "id": 8,
                                                "isExtended": false,
                                                "isVisible": true
                                            },
                                            {
                                                "row": "Most watched Production Companies",
                                                "id": 6,
                                                "isExtended": false,
                                                "isVisible": true
                                            },
                                            {
                                                "row": "Most watched Release Years",
                                                "id": 7,
                                                "isExtended": false,
                                                "isVisible": true
                                            }
                                        ]
                                    },
                                    "lastPlays": {
                                        "type": "array",
                                        "description": "An array containing JSON objects of the last played movies based on date.",
                                        "items": {
                                          "$ref": "#/components/schemas/movie"
                                        }
                                    },
                                    "mostWatchedActors": {
                                        "type": "array",
                                        "description": "An array containing JSON objects of the most watched male actors.",
                                        "items": {
                                          "$ref": "#/components/schemas/male"
                                        }
                                    },
                                    "mostWatchedActresses": {
                                        "type": "array",
                                        "description": "An array containing JSON objects of the most watched actresses.",
                                        "items": {
                                          "$ref": "#/components/schemas/female"
                                        }
                                    },
                                    "mostWatchedDirectors": {
                                        "type": "array",
                                        "description": "An array containing JSON objects of the most watched directors.",
                                        "items": {
                                          "$ref": "#/components/schemas/male"
                                        }
                                    },
                                    "mostWatchedLanguages": {
                                        "type": "array",
                                        "description": "An array containing JSON objects of the most watched languages.",
                                        "items": {
                                          "$ref": "#/components/schemas/language"
                                        }
                                    },
                                    "mostWatchedGenres": {
                                        "type": "array",
                                        "description": "An array containing JSON objects of the most watched genres.",
                                        "items": {
                                          "$ref": "#/components/schemas/genre"
                                        }
                                    },
                                    "mostWatchedProductionCompanies": {
                                        "type": "array",
                                        "description": "An array containing JSON objects of the most watched production companies, the watched movies they produced and their country of origin.",
                                        "items": {
                                          "$ref": "#/components/schemas/productioncompany"
                                        }
                                    },
                                    "mostWatchedReleaseYears": {
                                        "type": "array",
                                        "description": "An array containing JSON objects of the most watched release years.",
                                        "items": {
                                          "$ref": "#/components/schemas/releaseYears"
                                        }
                                    },
                                    "watchlistItems": {
                                        "type": "array",
                                        "description": "An array containing JSON objects of the items in the watchlist.",
                                        "items": {
                                          "$ref": "#/components/schemas/movie"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "403": {
                    "$ref": "#/components/responses/403"
                },
                "404": {
                    "$ref": "#/components/responses/404"
                }
            }
        }
    },
    "/users/{username}\/statistics/lastplays": {
      "get": {
        "tags": [
          "Statistics"
        ],
        "summary": "Get last plays",
        "description": "Gets the last plays for use in lazy-loading the data shown in the user's dashboard",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "Name of user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/movie"
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "description": "The requested user does not exist."
          }
        }
      }
    },
    "/users/{username}\/statistics/mostwatchedactors": {
      "get": {
        "tags": [
          "Statistics"
        ],
        "summary": "Get most watched actors",
        "description": "Gets the most watched actors for use in lazy-loading the data shown in the user's dashboard",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "Name of user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/female"
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "description": "The requested user does not exist."
          }
        }
      }
    },
    "/users/{username}\/statistics/mostwatchedactresses": {
      "get": {
        "tags": [
          "Statistics"
        ],
        "summary": "Get most watched actresses",
        "description": "Gets the most watched actresses for use in lazy-loading the data shown in the user's dashboard",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "Name of user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/male"
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "description": "The requested user does not exist."
          }
        }
      }
    },
    "/users/{username}\/statistics/mostwatcheddirectors": {
      "get": {
        "tags": [
          "Statistics"
        ],
        "summary": "Get most watched directors",
        "description": "Gets the most watched directors for use in lazy-loading the data shown in the user's dashboard",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "Name of user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/male"
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "description": "The requested user does not exist."
          }
        }
      }
    },
    "/users/{username}/statistics/mostwatchedlanguages": {
      "get": {
        "tags": [
          "Statistics"
        ],
        "summary": "Get most watched languages",
        "description": "Get list of the languages that have been watched the most, together with the amount of times they have been watched.",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "Name of user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/language"
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "description": "The requested user does not exist."
          }
        }
      }
    },
    "/users/{username}/statistics/mostwatchedgenres": {
      "get": {
        "tags": [
          "Statistics"
        ],
        "summary": "Get most watched genres",
        "description": "Get list of the genres that have been watched the most, together with the amount of times they have been watched.",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "Name of user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/genre"
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "description": "The requested user does not exist."
          }
        }
      }
    },
    "/users/{username}/statistics/mostwatchedproductioncompanies": {
      "get": {
        "tags": [
          "Statistics"
        ],
        "summary": "Get most watched production companies",
        "description": "Get list of the production companies that have been watched the most, together with the amount of times they have been watched, the watched movies they've produced and their country of origin.",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "Name of user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/productioncompany"
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "description": "The requested user does not exist."
          }
        }
      }
    },
    "/users/{username}/statistics/mostwatchedreleaseyears": {
      "get": {
        "tags": [
          "Statistics"
        ],
        "summary": "Get most watched release years",
        "description": "Get list of the release years that have been watched the most, together with the amount of times they have been watched.",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "Name of user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/releaseYears"
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "description": "The requested user does not exist."
          }
        }
      }
    },
    "/users/{username}/statistics/watchlist": {
      "get": {
        "tags": [
          "Statistics"
        ],
        "summary": "Get movies in the watchlist",
        "description": "Get all the movies in the watchlist of the user.",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "Name of user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/movie"
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "description": "The requested user does not exist."
          }
        }
      }
    },
    "\/users\/{username}\/history\/movies": {
      "get": {
        "tags": [
          "History"
        ],
        "summary": "Get played movies with watch dates of user",
        "description": "Get all played movies with watch dates set. Sorted by most recently watch dates on default.",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "Name of user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "The search term",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 24
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Sort order",
            "required": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application\/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "watchlist": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "movie": {
                            "$ref": "#/components/schemas/movie"
                          },
                          "watchedAt": {
                            "$ref": "#/components/schemas/date"
                          }
                        }
                      }
                    },
                    "currentPage": {
                      "type": "integer",
                      "example": 1
                    },
                    "maxPage": {
                      "type": "integer",
                      "example": 10
                    }
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      },
      "post": {
        "tags": [
          "History"
        ],
        "summary": "Add movie play with watch date set to user",
        "description": "Create or update the provided watch dates for the specified movies. A date for plays is required.",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "Name of user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application\/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "movaryId": {
                      "$ref": "#/components/schemas/id"
                    },
                    "watchedAt": {
                      "$ref": "#/components/schemas/date"
                    },
                    "plays": {
                      "$ref": "#/components/schemas/playsOptional"
                    },
                    "comment": {
                      "$ref": "#/components/schemas/commentOptional"
                    },
                    "position": {
                      "$ref": "#/components/schemas/positionOptional"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      },
      "put": {
        "tags": [
          "History"
        ],
        "summary": "Replace movie play with watch date set for user",
        "description": "Create or replace the provided watch dates for the specified movies. A date for plays is required.",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "Name of user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application\/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "movaryId": {
                      "$ref": "#/components/schemas/id"
                    },
                    "watchedAt": {
                      "$ref": "#/components/schemas/date"
                    },
                    "plays": {
                      "$ref": "#/components/schemas/plays"
                    },
                    "comment": {
                      "$ref": "#/components/schemas/comment"
                    },
                    "position": {
                      "$ref": "#/components/schemas/position"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      },
      "delete": {
        "tags": [
          "History"
        ],
        "summary": "Delete movie watch dates from user history",
        "description": "Delete all watch dates of specified movies if no specific watch dates are provided. A date for plays is required.",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "Name of user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application\/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "movaryId": {
                      "$ref": "#/components/schemas/id"
                    },
                    "watchedAt": {
                      "$ref": "#/components/schemas/date"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "\/users\/{username}\/watchlist\/movies": {
      "get": {
        "tags": [
          "Watchlist"
        ],
        "summary": "Get movies in watchlist of user",
        "description": "Get all movies on the user watchlist. Sorted by most recently added on default.",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "Name of user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "The search term",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 24
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Sort by",
            "required": false,
            "schema": {
              "type": "string",
              "default": "addedAt",
              "enum": [
                "addedAt",
                "rating",
                "releaseDate",
                "runtime",
                "title"
              ]
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Sort order",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "releaseYear",
            "in": "query",
            "description": "Release year",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application\/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "watchlist": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "movie": {
                            "$ref": "#/components/schemas/movie"
                          },
                          "addedAt": {
                            "$ref": "#/components/schemas/date"
                          }
                        }
                      }
                    },
                    "currentPage": {
                      "type": "integer",
                      "example": 1
                    },
                    "maxPage": {
                      "type": "integer",
                      "example": 10
                    }
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      },
      "post": {
        "tags": [
          "Watchlist"
        ],
        "summary": "Add movie to watchlist of user",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "Name of user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application\/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "movaryId": {
                      "$ref": "#/components/schemas/id"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Watchlist"
        ],
        "summary": "Delete movie from watchlist of user",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "Name of user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application\/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "movaryId": {
                      "$ref": "#/components/schemas/id"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "\/users\/{username}\/played\/movies": {
      "get": {
        "tags": [
          "Played"
        ],
        "summary": "Get played movies of user",
        "description": "Get all played movies and their watch dates.",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "Name of user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "The search term",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 24
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Sort by",
            "required": false,
            "schema": {
              "type": "string",
              "default": "title",
              "enum": [
                "addedAt",
                "rating",
                "releaseDate",
                "runtime",
                "title"
              ]
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Sort order",
            "required": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "releaseYear",
            "in": "query",
            "description": "Release year",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application\/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "played": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "movie": {
                            "$ref": "#/components/schemas/movie"
                          },
                          "watchedDates": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "date": {
                                  "$ref": "#/components/schemas/dateNullable"
                                },
                                "plays": {
                                  "$ref": "#/components/schemas/plays"
                                },
                                "comment": {
                                  "$ref": "#/components/schemas/comment"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "currentPage": {
                      "type": "integer",
                      "example": 1
                    },
                    "maxPage": {
                      "type": "integer",
                      "example": 10
                    }
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      },
      "post": {
        "tags": [
          "Played"
        ],
        "summary": "Add movie plays to user",
        "description": "Create or update the provided watch dates for the specified movies.",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "Name of user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application\/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "movaryId": {
                      "$ref": "#/components/schemas/id"
                    },
                    "watchDates": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "watchedAt": {
                            "$ref": "#/components/schemas/dateNullable"
                          },
                          "plays": {
                            "$ref": "#/components/schemas/playsOptional"
                          },
                          "comment": {
                            "$ref": "#/components/schemas/commentOptional"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      },
      "put": {
        "tags": [
          "Played"
        ],
        "summary": "Replace movie plays for user",
        "description": "Create or replace the provided watch dates for the specified movies.",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "Name of user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application\/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "movaryId": {
                      "$ref": "#/components/schemas/id"
                    },
                    "watchDates": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "watchedAt": {
                            "$ref": "#/components/schemas/dateNullable"
                          },
                          "plays": {
                            "$ref": "#/components/schemas/plays"
                          },
                          "comment": {
                            "$ref": "#/components/schemas/comment"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Played"
        ],
        "summary": "Delete movie plays from user",
        "description": "Delete all watch dates of specified movies if no specific watch dates are provided.",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "Name of user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application\/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "movaryId": {
                      "$ref": "#/components/schemas/id"
                    },
                    "watchDates": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/dateNullable"
                      },
                      "required": false
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "\/movies\/add": {
      "post": {
        "tags": [
          "Movies"
        ],
        "summary": "Add movie via external provider id",
        "description": "Adds a new movie via external data provider",
        "requestBody": {
          "content": {
            "application\/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tmdbId": {
                    "$ref": "#/components/schemas/id"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application\/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "movaryId": {
                      "$ref": "#/components/schemas/id"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "\/movies\/search": {
      "get": {
        "tags": [
          "Movies"
        ],
        "summary": "Search for movies remotely",
        "description": "Search remotely on tmdb for the movie with the specified search filters. Movies already existing locally will have a Movary id set.",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "The search term",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Search result page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "releaseYear",
            "in": "query",
            "description": "Filter by release year",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 2012
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application\/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "$ref": "#/components/schemas/title"
                          },
                          "releaseDate": {
                            "$ref": "#/components/schemas/releaseDateNullable"
                          },
                          "overview": {
                            "$ref": "#/components/schemas/overview"
                          },
                          "originalLanguage": {
                            "type": "string",
                            "example": "en"
                          },
                          "tmdbPosterPath": {
                            "type": "string",
                            "example": "/gb7C4oRzYWXWCuZMR1cwtHa53Pz.jpg"
                          },
                          "ids": {
                            "type": "object",
                            "properties": {
                              "movary": {
                                "$ref": "#/components/schemas/idNullable"
                              },
                              "tmdb": {
                                "$ref": "#/components/schemas/id"
                              }
                            }
                          }
                        }
                      }
                    },
                    "currentPage": {
                      "type": "integer",
                      "example": 1
                    },
                    "maxPage": {
                      "type": "integer",
                      "example": 10
                    }
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/webhook/plex/{uuid}": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Endpoint to scrobble your Plex watches to Movary.",
        "parameters": [
          {
            "name": "UUID",
            "in": "query",
            "description": "An UUID that is generated by the user in the Plex settings.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/webhook/jellyfin/{uuid}": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Endpoint to scrobble your Jellyfin watches to Movary.",
        "parameters": [
          {
            "name": "UUID",
            "in": "query",
            "description": "An UUID that is generated by the user in the Jellyfin settings.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/webhook/emby/{uuid}": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "description": "Endpoint to scrobble your Emby watches to Movary.",
        "parameters": [
          {
            "name": "UUID",
            "in": "query",
            "description": "An UUID that is generated by the user in the Emby settings.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/users/{username}/movies/{id}/rating": {
      "post": {
        "tags": [
          "Rating"
        ],
        "summary": "Update the rating of an user for a movie",
        "description": "Update the rating of an user for a movie",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "Name of user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Movary ID of the movie",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application\/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "rating": {
                      "type": "integer",
                      "description": "Rating of the movie. It has to be an integer in the range of 0 - 10. If the rating is 0, then the rating will be deleted.",
                      "example": 10,
                      "minimum": 0,
                      "maximum": 10
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "security": [
          {
            "authToken": [],
            "cookieauth": []
          }
        ]
      }
    },
    "\/fetchMovieRatingByTmdbdId": {
      "get": {
        "tags": [
          "Rating"
        ],
        "summary": "Get movie rating",
        "description": "Get the movie rating from the current user. The movie is found by using the TMDB ID",
        "parameters": [
          {
            "name": "tmdbId",
            "description": "The ID of the movie from TMDB",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The TMDB ID was valid and the ratings have been returned.",
            "content": {
              "application\/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "personalRating": {
                      "type": "integer",
                      "description": "The rating of the movie by the user. It will be null if there is no rating.",
                      "minimum": 1,
                      "maximum": 10
                    }
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        }
      }
    },
    "/authentication/token": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Get authentication data",
        "description": "Get information about the authenticated user.",
        "parameters": [
          {
            "in": "header",
            "name": "X-Movary-Token",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name of the user"
                        },
                        "userId": {
                          "type": "integer",
                          "description": "The id of the user"
                        },
                        "isAdmin": {
                          "type": "boolean",
                          "description": "True if user is an admin, false if not."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      },
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Create authentication token",
        "description": "Create an authentication token via email, password and optionally TOTP code. Add the token as X-Movary-Token header to further requests. Token lifetime 1d default, 30d with rememberMe.",
        "parameters": [
          {
            "$ref": "#/components/parameters/deviceName"
          }
        ],
        "requestBody": {
          "description": "The credentials and optionally a two-factor authentication code",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "user@email.com",
                    "description": "An email address"
                  },
                  "password": {
                    "type": "string",
                    "example": "mysecurepassword123",
                    "description": "A password"
                  },
                  "totpCode": {
                    "type": "integer",
                    "pattern": "/^[0-9]{6}$/gm",
                    "example": "123456",
                    "description": "A 6-digit two-factor TOTP code",
                    "nullable": true
                  },
                  "rememberMe": {
                    "type": "boolean",
                    "example": true,
                    "description": "Extend auth token lifetime",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returned if authentication was successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "authToken": {
                      "type": "string",
                      "description": "The authentication token to be used in future requests."
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The username of the user"
                        },
                        "userId": {
                          "type": "integer",
                          "description": "The ID of the authenticated user"
                        },
                        "isAdmin": {
                          "type": "boolean",
                          "description": "True if the user is an admin, False if the user isn't."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete" : {
        "tags": [
          "Authentication"
        ],
        "summary": "Delete authentication token",
        "description": "Delete the authentication token provided in the X-Movary-Token header value.",
        "parameters": [
          {
            "in": "header",
            "name": "X-Movary-Token",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {},
        "responses": {
          "204": {
            "description": "Returned if authentication token does no longer exist"
          },
          "400": {
            "$ref": "#/components/responses/400"
          }
        }
      }
    },
    "/create-user": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Create a new user",
        "description": "Creates new user if one of the conditions are true: Public registration is enabled or the server has no users.",
        "parameters": [
          {
            "$ref": "#/components/parameters/deviceName"
          }
        ],
        "requestBody": {
          "description": "The request data in JSON format.",
          "content": {
            "application/json": {
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "myname@domain.com",
                    "description": "E-Mail address of the new user"
                  },
                  "username": {
                    "type": "string",
                    "example": "A very cool username",
                    "description": "The username of the new user"
                  },
                  "password": {
                    "type": "string",
                    "example": "My secure password",
                    "description": "The password of the new user"
                  },
                  "repeatPassword": {
                    "type": "string",
                    "example": "My secure password",
                    "description": "The password of the new user but repeated for security."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returned if the user was created.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "userId": {
                      "type": "integer",
                      "description": "The id of the newly created user."
                    },
                    "token": {
                      "type": "string",
                      "description": "The authentication token to be used in future requests."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "403": {
            "$ref": "#/components/responses/403"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "male": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The ID Movary has assigned this person",
            "example": 32
          },
          "name": {
            "type": "string",
            "description": "The name of the person",
            "example": "Peron name"
          },
          "uniqueCount": {
            "type": "integer",
            "example": 1
          },
          "totalCount": {
            "type": "integer",
            "example": 1
          },
          "gender": {
            "type": "string",
            "example": "m",
            "description": "Can be either f (for female) or m (for male)"
          },
          "tmdb_poster_path": {
            "type": "string",
            "description": "The filepath of the poster from the TMDB API",
            "example": "/tmdb_poster.jpg"
          },
          "poster_path": {
            "type": "string",
            "description": "The filepath of the poster on the local Kovary installation from the root directory of Movary",
            "example": "\/storage\/images\/person\/32.jpg"
          }
        }
      },
      "female": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The ID Movary has assigned this person",
            "example": 32
          },
          "name": {
            "type": "string",
            "description": "The name of the person",
            "example": "Peron name"
          },
          "uniqueCount": {
            "type": "integer",
            "example": 1
          },
          "totalCount": {
            "type": "integer",
            "example": 1
          },
          "gender": {
            "type": "string",
            "example": "f",
            "description": "Can be either f (for female) or m (for male)"
          },
          "tmdb_poster_path": {
            "type": "string",
            "description": "The filepath of the poster from the TMDB API",
            "example": "/tmdb_poster.jpg"
          },
          "poster_path": {
            "type": "string",
            "description": "The filepath of the poster on the local Kovary installation from the root directory of Movary",
            "example": "\/storage\/images\/person\/32.jpg"
          }
        }
      },
      "productioncompany": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the production company",
            "example": "Disney"
          },
          "count": {
            "type": "integer",
            "description": "The amount of watched movies this production company has released",
            "example": 2
          },
          "origin_country": {
            "type": "string",
            "description": "The country where this production company was founded",
            "example": "US"
          },
          "movies": {
            "type": "array",
            "description": "The list of watched movies this production company has released",
            "example": [
              "Movie 1",
              "Movie 2"
            ]
          }
        }
      },
      "language": {
        "type": "object",
        "properties": {
          "language": {
            "type": "string",
            "description": "Two-letter code of the language",
            "example": "en"
          },
          "count": {
            "type": "integer",
            "description": "The amount of times watched movies have occured in this language",
            "example": 8
          },
          "name": {
            "type": "string",
            "description": "The name of the language in speaking format",
            "example": "English"
          },
          "code": {
            "type": "string",
            "description": "Two-letter code of the language",
            "example": "en"
          }
        }
      },
      "genre": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the genre",
            "example": "Action"
          },
          "count": {
            "type": "integer",
            "description": "The amount of times watched movies contain this genre",
            "example": 8
          }
        }
      },
      "releaseYears": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The year in four digits",
            "example": "2024"
          },
          "count": {
            "type": "integer",
            "description": "The amount of times watched movies have been released in this year",
            "example": 8
          }
        }
      },
      "movie": {
        "type": "object",
        "properties": {
          "title": {
            "$ref": "#/components/schemas/title"
          },
          "releaseDate": {
            "$ref": "#/components/schemas/releaseDateNullable"
          },
          "tagline": {
            "type": "string",
            "nullable": true
          },
          "overview": {
            "$ref": "#/components/schemas/overview"
          },
          "originalLanguage": {
            "type": "string",
            "nullable": true
          },
          "runtime": {
            "type": "integer",
            "nullable": true
          },
          "posterPath": {
            "type": "string",
            "nullable": true
          },
          "ids": {
            "type": "object",
            "properties": {
              "movary": {
                "$ref": "#/components/schemas/id"
              },
              "tmdb": {
                "$ref": "#/components/schemas/idNullable"
              },
              "trakt": {
                "$ref": "#/components/schemas/idNullable"
              },
              "imdb": {
                "type": "string",
                "nullable": true
              },
              "letterboxd": {
                "type": "string",
                "nullable": true
              }
            }
          },
          "userRating": {
            "type": "integer",
            "nullable": true,
            "minimum": 1,
            "maximum": 10
          },
          "externalRatings": {
            "type": "object",
            "properties": {
              "tmdb": {
                "type": "object",
                "properties": {
                  "average": {
                    "type": "number"
                  },
                  "count": {
                    "type": "integer"
                  }
                }
              },
              "imdb": {
                "type": "object",
                "properties": {
                  "average": {
                    "type": "number"
                  },
                  "count": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          "updatedAt": {
            "$ref": "#/components/schemas/dateNullable"
          },
          "createdAt": {
            "$ref": "#/components/schemas/date"
          }
        }
      },
      "id": {
        "type": "integer",
        "example": 42
      },
      "idNullable": {
        "type": "integer",
        "example": 42,
        "nullable": true
      },
      "plays": {
        "type": "integer",
        "example": 1
      },
      "playsOptional": {
        "type": "integer",
        "example": 1,
        "default": 1,
        "required": false
      },
      "title": {
        "type": "string",
        "example": "Matrix"
      },
      "releaseDateNullable": {
        "type": "string",
        "example": "2004-12-07",
        "nullable": true
      },
      "overview": {
        "type": "string",
        "example": "Lorem ipsum",
        "nullable": true
      },
      "comment": {
        "type": "string",
        "example": "This is a comment",
        "nullable": true
      },
      "commentOptional": {
        "type": "string",
        "example": "This is a comment",
        "nullable": true,
        "default": null,
        "required": false
      },
      "position": {
        "type": "number",
        "example": 1,
        "nullable": false
      },
      "positionOptional": {
        "type": "number",
        "example": 1,
        "nullable": true,
        "default": 1,
        "required": false
      },
      "date": {
        "type": "string",
        "example": "2023-07-02"
      },
      "dateNullable": {
        "type": "string",
        "nullable": true,
        "example": "2023-07-02"
      }
    },
    "responses": {
      "204": {
        "description": "Successful operation, response has no content"
      },
      "400": {
        "description": "The request payload or header are not correct",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "The error type",
                  "example": "ErrorType"
                },
                "message": {
                  "type": "string",
                  "description": "The error message",
                  "example": "This is the error message"
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "The provided credentials or TOTP code are not valid",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "The error type",
                  "example": "ErrorType"
                },
                "message": {
                  "type": "string",
                  "description": "The error message",
                  "example": "This is the error message"
                }
              }
            }
          }
        }
      },
      "403": {
        "description": "Not authorized to access resource"
      },
      "404": {
        "description": "The resource was not found"
      }
    },
    "parameters": {
      "deviceName": {
        "in": "header",
        "name": "X-Movary-Client",
        "schema": {
          "type": "string"
        },
        "required": true,
        "example": "Client Name"
      }
    },
    "securitySchemes": {
      "token": {
        "type": "apiKey",
        "name": "X-Movary-Token",
        "in": "header"
      }
    }
  }
}
